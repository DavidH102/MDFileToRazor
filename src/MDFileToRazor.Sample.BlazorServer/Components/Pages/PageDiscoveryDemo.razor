@page "/page-discovery-demo"
@using MDFileToRazor.Components.Services
@inject IGeneratedPageDiscoveryService PageDiscovery

<PageTitle>Page Discovery Demo</PageTitle>

<h1>üß≠ Page Discovery Service Demo</h1>

<p class="lead">
    This page demonstrates the new <code>IGeneratedPageDiscoveryService</code> that allows you to
    discover all generated Razor pages with their routes and metadata.
</p>

@if (isLoading)
{
    <div>Loading generated pages...</div>
}
else if (pages.Any())
{
    <div class="row">
        <div class="col-md-6">
            <h3>üìã All Generated Pages</h3>
            <table class="table">
                <thead>
                    <tr>
                        <th>Title</th>
                        <th>Route</th>
                        <th>Tags Count</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var pageInfo in pages)
                    {
                        <tr>
                            <td>@pageInfo.Title</td>
                            <td><code>@pageInfo.Route</code></td>
                            <td>@pageInfo.Tags.Count</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="col-md-6">
            <h3>üè∑Ô∏è Filter by Tags</h3>
            @if (allTags.Any())
            {
                <select @onchange="OnTagChanged" class="form-select">
                    <option value="All">All</option>
                    @foreach (var tag in allTags)
                    {
                        <option value="@tag">@tag</option>
                    }
                </select>

                @if (!string.IsNullOrEmpty(selectedTag) && selectedTag != "All")
                {
                    <h4>Pages with tag: @selectedTag</h4>
                    @foreach (var pageInfo in filteredPages)
                    {
                        <div class="card mb-2">
                            <div class="card-body">
                                <h5 class="card-title">
                                    <a href="@pageInfo.Route">@pageInfo.Title</a>
                                </h5>
                                @if (!string.IsNullOrEmpty(pageInfo.Description))
                                {
                                    <p class="card-text"><small class="text-muted">@pageInfo.Description</small></p>
                                }
                                <div>
                                    @foreach (var tag in pageInfo.Tags)
                                    {
                                        <span class="badge bg-primary me-1">@tag</span>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                }
            }
            else
            {
                <p><em>No tags found in generated pages.</em></p>
            }
        </div>
    </div>

    <div class="mt-4">
        <h3>üîç Page Details</h3>
        <pre><code>@pageDetailsJson</code></pre>
    </div>
}
else
{
    <div class="alert alert-info">
        <strong>No generated pages found.</strong>
        <p>
            To see this service in action:
        </p>
        <ol>
            <li>Add some <code>.md</code> files to the <code>MDFilesToConvert</code> directory</li>
            <li>Build the project to generate Razor pages</li>
            <li>Refresh this page</li>
        </ol>
    </div>
}

@code
{
    private List<GeneratedPageInfo> pages = new();
    private List<string> allTags = new();
    private string selectedTag = "All";
    private List<GeneratedPageInfo> filteredPages = new();
    private bool isLoading = true;
    private string pageDetailsJson = "";

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Discover all generated pages
            pages = (await PageDiscovery.DiscoverGeneratedPagesAsync()).ToList();

            // Extract all unique tags
            allTags = pages.SelectMany(p => p.Tags).Distinct().OrderBy(t => t).ToList();

            // Generate JSON for debugging
            pageDetailsJson = System.Text.Json.JsonSerializer.Serialize(pages, new System.Text.Json.JsonSerializerOptions
            {
                WriteIndented = true
            });
        }
        catch (Exception ex)
        {
            pageDetailsJson = $"Error loading pages: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }

    private void OnTagChanged(ChangeEventArgs e)
    {
        selectedTag = e.Value?.ToString() ?? "All";

        if (selectedTag == "All")
        {
            filteredPages = pages;
        }
        else
        {
            filteredPages = pages.Where(p => p.Tags.Contains(selectedTag)).ToList();
        }
    }
}
